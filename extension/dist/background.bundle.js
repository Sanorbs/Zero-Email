var ZEMSContentScript,__webpack_exports__={};let processingQueue=[];const PROCESSING_INTERVAL=5e3;setInterval((async()=>{if(0===processingQueue.length)return;const e=processingQueue.shift();try{const s=await fetch("http://localhost:3000/api/process",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),t=await s.json();chrome.storage.local.get(["zemsEmails"],(e=>{const s=e.zemsEmails||[];s.push(t),chrome.storage.local.set({zemsEmails:s})}))}catch(e){console.error("ZEMS: Processing failed",e)}}),5e3),chrome.runtime.onMessage.addListener(((e,s,t)=>{switch(e.type){case"PROCESS_EMAIL":processingQueue.push(e.email),t({success:!0});break;case"GET_EMAILS":return chrome.storage.local.get(["zemsEmails"],(e=>{t({emails:e.zemsEmails||[]})})),!0;case"SEARCH_EMAILS":return chrome.storage.local.get(["zemsEmails"],(s=>{const o=(s.zemsEmails||[]).filter((s=>s.subject.toLowerCase().includes(e.query.toLowerCase())||s.from.toLowerCase().includes(e.query.toLowerCase())));t({results:o})})),!0}const o=new Set;chrome.runtime.onConnect.addListener((e=>{o.add(e),e.onDisconnect.addListener((()=>{o.delete(e)}))})),chrome.runtime.onSuspend.addListener((()=>{console.log("ZEMS: Extension unloading - cleaning up"),o.forEach((e=>e.disconnect()))}))})),ZEMSContentScript=__webpack_exports__;